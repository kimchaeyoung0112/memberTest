package member;

import java.util.Scanner;

import com.kosta.dao.MemberDAO;
import com.kosta.dto.MemberDTO;

public class MemberTest {

	private static MemberDTO dto = null;

	public static void main(String[] args) {
		/*
		 * 1.db연결 (member 테이블 생성) 2. preparedStatement 이용하여 insert, update, delete =>
		 * executeupdate select => executeQuery
		 * 
		 * 3. executeupdate => row 값 받아서 확인 execyteQuery -> resultset 이용하여 받아서 출력 4.
		 * close
		 * 
		 */
		
		
		while (true) {

			Scanner sc = new Scanner(System.in);

			System.out.println("1. 회원가입");
			System.out.println("2. 회원수정");
			System.out.println("3. 회원삭제");
			System.out.println("4. 회원보기");
			System.out.println("5. 전체보기");
			System.out.println("기능선택 => ");
			
			int choice = Integer.parseInt(sc.nextLine());

			MemberDAO dao = new MemberDAO();

			if (choice == 1) {
				// 회원가입
				System.out.println("아이디를 입력하세요.");
				String member_id = sc.nextLine();

				int result = checkId(member_id); //아이디 중복체크 

				if (result > 1) {
					System.out.println("중복된 아이디 입니다.");
					break;
				}

				System.out.println("비밀번호를 입력하세요 ");
				String member_pwd = sc.nextLine();

				System.out.println("이름을 입력하세요.");
				String name = sc.nextLine();

				System.out.println("이메일을 입력하세요.");
				String email = sc.nextLine();
				
				
				dto = new MemberDTO(member_id, member_pwd, name, email); 
				result = dao.insert(dto);
				
				if (result >= 1) {
					System.out.println("추가완료"); 
				} else {
					System.out.println("추가실패");
				}

			} else if (choice == 2) {
				//회원수정 
				System.out.println("수정할 아이디를 입력하세요.");
				String member_id = sc.nextLine();

				int result = checkId(member_id); //아이디 중복체크 

				if (result >= 0) {
					System.out.println("미등록 아이디입니다.");
					break;
				}

				System.out.println("변경할 비밀번호를 입력하세요. ");
				String member_pwd = sc.nextLine();

				System.out.println("변경할 이메일을 입력하세요.");
				String email = sc.nextLine();

				dao.update(member_id, member_pwd, email);

				if (result >= 1) {
					System.out.println("변경완료");
				} else {
					System.out.println("변경실패");
				}

			} else if (choice == 3) {
				//회원삭제
				System.out.println("삭제할 아이디를 선택하세요.");
				String member_id = sc.nextLine();
				
				int result = checkId(member_id); //아이디 중복체크 
				
				if (result >= 0) {
					System.out.println("미등록 아이디입니다.");
					break;
				}

				dao.delete(member_id);

				if (result >= 1) {
					System.out.println("삭제완료");
				} else {
					System.out.println("삭제실패");
				}

			} else if (choice == 4) {
				//회원조회
				System.out.println("조회할 회원의 아이디를 입력하세요. ");
				String member_id = sc.nextLine();
				
				int result = checkId(member_id); //아이디 중복체크 

				if (result >= 0) {
					System.out.println("미등록 아이디입니다.");
					break;
				}
				
				dao.idSelect(member_id);

				if (result >= 1) {
					System.out.println("조회완료");
				} else {
					System.out.println("조회실패");
				}

			} else if (choice == 5) {
				//전체회원조회
				dao.getAll();

			} else {
				System.out.println("잘못된 기능을 선택하였습니다. ");
			}

		}
	}

	private static int checkId(String member_id) {
		MemberDAO dao = new MemberDAO();
		return dao.checkId(member_id);
	}

}
